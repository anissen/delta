script = '''
square = \v
    v * v

match = \v
    x = 2
    v + x is
       	3
            y = 4
            v + y
        4
           	z = v + x + 5
           	z | square
        5
           	w = 6
           	w2 = 7
           	x + w + w2

"result is {1 | match}, {2 | match} and {3 | match}"
'''

[output]
result = "result is 5, 81 and 15"
type = "string"

[output.compiler]
bytecode = "[31, 6, 115, 113, 117, 97, 114, 101, 1, 0, 114, 31, 5, 109, 97, 116, 99, 104, 1, 0, 128, 32, 4, 109, 97, 105, 110, 33, 0, 1, 21, 0, 33, 1, 1, 21, 1, 26, 10, 114, 101, 115, 117, 108, 116, 32, 105, 115, 32, 25, 0, 0, 0, 1, 35, 1, 0, 1, 5, 109, 97, 116, 99, 104, 14, 26, 2, 44, 32, 14, 25, 0, 0, 0, 2, 35, 1, 0, 1, 5, 109, 97, 116, 99, 104, 14, 26, 5, 32, 97, 110, 100, 32, 14, 25, 0, 0, 0, 3, 35, 1, 0, 1, 5, 109, 97, 116, 99, 104, 14, 26, 0, 14, 34, 32, 6, 115, 113, 117, 97, 114, 101, 20, 0, 20, 0, 3, 34, 32, 5, 109, 97, 116, 99, 104, 25, 0, 0, 0, 2, 21, 1, 20, 0, 20, 1, 0, 21, 2, 20, 2, 25, 0, 0, 0, 3, 17, 40, 0, 15, 25, 0, 0, 0, 4, 21, 2, 20, 0, 20, 2, 0, 38, 0, 73, 20, 2, 25, 0, 0, 0, 4, 17, 40, 0, 29, 20, 0, 20, 1, 0, 25, 0, 0, 0, 5, 0, 21, 2, 20, 2, 35, 1, 1, 0, 6, 115, 113, 117, 97, 114, 101, 38, 0, 33, 20, 2, 25, 0, 0, 0, 5, 17, 40, 0, 22, 25, 0, 0, 0, 6, 21, 2, 25, 0, 0, 0, 7, 21, 3, 20, 1, 20, 2, 0, 20, 3, 0, 34]"
bytecode_length = 249
disassembled = """
0 \tfunction signature (name: square) (local count: 1) (function position: 114)
11 \tfunction signature (name: match) (local count: 1) (function position: 128)

21 \t=== function chunk: main ===
27 \tfunction (function index: 0) (params: 1)
30 \tset_value (index: 0)
32 \tfunction (function index: 1) (params: 1)
35 \tset_value (index: 1)
37 \tpush_string (value: 'result is ')
49 \tpush_integer (value: 1)
54 \tcall match (is_global: 0) (arg count: 1, function index: 1)
64 \tstr_concat
65 \tpush_string (value: ', ')
69 \tstr_concat
70 \tpush_integer (value: 2)
75 \tcall match (is_global: 0) (arg count: 1, function index: 1)
85 \tstr_concat
86 \tpush_string (value: ' and ')
93 \tstr_concat
94 \tpush_integer (value: 3)
99 \tcall match (is_global: 0) (arg count: 1, function index: 1)
109 \tstr_concat
110 \tpush_string (value: '')
112 \tstr_concat
113 \tret

114 \t=== function chunk: square ===
122 \tget_value (index: 0)
124 \tget_value (index: 0)
126 \tint_mult
127 \tret

128 \t=== function chunk: match ===
135 \tpush_integer (value: 2)
140 \tset_value (index: 1)
142 \tget_value (index: 0)
144 \tget_value (index: 1)
146 \tint_add
147 \tset_value (index: 2)
149 \tget_value (index: 2)
151 \tpush_integer (value: 3)
156 \teq
157 \tjump if false (offset: 15, to byte 175)
160 \tpush_integer (value: 4)
165 \tset_value (index: 2)
167 \tget_value (index: 0)
169 \tget_value (index: 2)
171 \tint_add
172 \tjump (offset: 73, to byte 248)
175 \tget_value (index: 2)
177 \tpush_integer (value: 4)
182 \teq
183 \tjump if false (offset: 29, to byte 215)
186 \tget_value (index: 0)
188 \tget_value (index: 1)
190 \tint_add
191 \tpush_integer (value: 5)
196 \tint_add
197 \tset_value (index: 2)
199 \tget_value (index: 2)
201 \tcall square (is_global: 1) (arg count: 1, function index: 0)
212 \tjump (offset: 33, to byte 248)
215 \tget_value (index: 2)
217 \tpush_integer (value: 5)
222 \teq
223 \tjump if false (offset: 22, to byte 248)
226 \tpush_integer (value: 6)
231 \tset_value (index: 2)
233 \tpush_integer (value: 7)
238 \tset_value (index: 3)
240 \tget_value (index: 1)
242 \tget_value (index: 2)
244 \tint_add
245 \tget_value (index: 3)
247 \tint_add
248 \tret
"""

[output.vm]
bytes_read = 327
instructions_executed = 99
jumps_performed = 5
max_stack_height = 10
stack_allocations = 70
