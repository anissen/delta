script = """
:hello is
    :yo
        "dawg"
    :hello
        "world"
    :hi
        "john"
"""

[output]
result = "world"
type = "string"

[output.compiler]
bytecode = "[32, 4, 109, 97, 105, 110, 27, 5, 104, 101, 108, 108, 111, 21, 0, 20, 0, 27, 2, 121, 111, 17, 40, 0, 9, 26, 4, 100, 97, 119, 103, 38, 0, 39, 20, 0, 27, 5, 104, 101, 108, 108, 111, 17, 40, 0, 10, 26, 5, 119, 111, 114, 108, 100, 38, 0, 16, 20, 0, 27, 2, 104, 105, 17, 40, 0, 6, 26, 4, 106, 111, 104, 110, 34]"
bytecode_length = 74
disassembled = """

0 \t=== function chunk: main ===
6 \tpush_simple_tag (value: ':hello')
13 \tset_value (index: 0)
15 \tget_value (index: 0)
17 \tpush_simple_tag (value: ':yo')
21 \teq
22 \tjump if false (offset: 9, to byte 34)
25 \tpush_string (value: 'dawg')
31 \tjump (offset: 39, to byte 73)
34 \tget_value (index: 0)
36 \tpush_simple_tag (value: ':hello')
43 \teq
44 \tjump if false (offset: 10, to byte 57)
47 \tpush_string (value: 'world')
54 \tjump (offset: 16, to byte 73)
57 \tget_value (index: 0)
59 \tpush_simple_tag (value: ':hi')
63 \teq
64 \tjump if false (offset: 6, to byte 73)
67 \tpush_string (value: 'john')
73 \tret
"""

[output.vm]
bytes_read = 50
instructions_executed = 14
jumps_performed = 2
max_stack_height = 3
stack_allocations = 9
