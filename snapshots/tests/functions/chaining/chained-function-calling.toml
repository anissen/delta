script = '''
add = \v1 v2
    v1 + v2

is_even = \v
    v % 2 == 0

3 | add 1 | is_even
'''

[output]
result = "true"
type = "boolean"

[output.compiler]
bytecode = "[33, 3, 97, 100, 100, 2, 0, 67, 33, 7, 105, 115, 95, 101, 118, 101, 110, 1, 0, 78, 34, 4, 109, 97, 105, 110, 35, 0, 2, 21, 0, 35, 1, 1, 21, 1, 27, 0, 0, 0, 3, 27, 0, 0, 0, 1, 37, 2, 0, 0, 3, 97, 100, 100, 37, 1, 0, 1, 7, 105, 115, 95, 101, 118, 101, 110, 36, 34, 3, 97, 100, 100, 20, 0, 20, 1, 0, 36, 34, 7, 105, 115, 95, 101, 118, 101, 110, 20, 0, 27, 0, 0, 0, 2, 4, 27, 0, 0, 0, 0, 17, 36]"
bytecode_length = 102
disassembled = """
0 \tfunction signature (name: add) (local count: 2) (function position: 67)
8 \tfunction signature (name: is_even) (local count: 1) (function position: 78)

20 \t=== function chunk: main ===
26 \tfunction (function index: 0) (params: 2)
29 \tset_value (index: 0)
31 \tfunction (function index: 1) (params: 1)
34 \tset_value (index: 1)
36 \tpush_integer (value: 3)
41 \tpush_integer (value: 1)
46 \tcall add (is_global: 0) (arg count: 2, function index: 0)
54 \tcall is_even (is_global: 0) (arg count: 1, function index: 1)
66 \tret

67 \t=== function chunk: add ===
72 \tget_value (index: 0)
74 \tget_value (index: 1)
76 \tint_add
77 \tret

78 \t=== function chunk: is_even ===
87 \tget_value (index: 0)
89 \tpush_integer (value: 2)
94 \tint_mod
95 \tpush_integer (value: 0)
100 \teq
101 \tret
"""

[output.vm]
bytes_read = 103
instructions_executed = 22
jumps_performed = 0
max_stack_height = 6
stack_allocations = 15
