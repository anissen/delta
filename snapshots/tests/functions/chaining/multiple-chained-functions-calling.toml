script = '''
square = \v
    v * v

add = \v1 v2
    v1 + v2

add_one = \v
    v | add 1

5 | square | add 3 | add_one
'''

[output]
result = "29"
type = "integer"

[output.compiler]
bytecode = "[33, 6, 115, 113, 117, 97, 114, 101, 1, 0, 94, 33, 3, 97, 100, 100, 2, 0, 108, 33, 7, 97, 100, 100, 95, 111, 110, 101, 1, 0, 119, 34, 4, 109, 97, 105, 110, 35, 0, 1, 21, 0, 35, 1, 2, 21, 1, 35, 2, 1, 21, 2, 27, 0, 0, 0, 5, 37, 1, 0, 0, 6, 115, 113, 117, 97, 114, 101, 27, 0, 0, 0, 3, 37, 2, 0, 1, 3, 97, 100, 100, 37, 1, 0, 2, 7, 97, 100, 100, 95, 111, 110, 101, 36, 34, 6, 115, 113, 117, 97, 114, 101, 20, 0, 20, 0, 3, 36, 34, 3, 97, 100, 100, 20, 0, 20, 1, 0, 36, 34, 7, 97, 100, 100, 95, 111, 110, 101, 20, 0, 27, 0, 0, 0, 1, 37, 2, 1, 1, 3, 97, 100, 100, 36]"
bytecode_length = 144
disassembled = """
0 \tfunction signature (name: square) (local count: 1) (function position: 94)
11 \tfunction signature (name: add) (local count: 2) (function position: 108)
19 \tfunction signature (name: add_one) (local count: 1) (function position: 119)

31 \t=== function chunk: main ===
37 \tfunction (function index: 0) (params: 1)
40 \tset_value (index: 0)
42 \tfunction (function index: 1) (params: 2)
45 \tset_value (index: 1)
47 \tfunction (function index: 2) (params: 1)
50 \tset_value (index: 2)
52 \tpush_integer (value: 5)
57 \tcall square (is_global: 0) (arg count: 1, function index: 0)
68 \tpush_integer (value: 3)
73 \tcall add (is_global: 0) (arg count: 2, function index: 1)
81 \tcall add_one (is_global: 0) (arg count: 1, function index: 2)
93 \tret

94 \t=== function chunk: square ===
102 \tget_value (index: 0)
104 \tget_value (index: 0)
106 \tint_mult
107 \tret

108 \t=== function chunk: add ===
113 \tget_value (index: 0)
115 \tget_value (index: 1)
117 \tint_add
118 \tret

119 \t=== function chunk: add_one ===
128 \tget_value (index: 0)
130 \tpush_integer (value: 1)
135 \tcall add (is_global: 1) (arg count: 2, function index: 1)
143 \tret
"""

[output.vm]
bytes_read = 156
instructions_executed = 33
jumps_performed = 0
max_stack_height = 8
stack_allocations = 21
