script = '''
read_file = \file
	file is
		"blah"
			:ok "file contents"
		_
			:error "something went wrong"

result = "blah" | read_file
result is
	:ok contents
		"result is ok: {contents}"
	else
	    "result was not ok"
'''

[output]
result = "result is ok: file contents"
type = "string"

[output.compiler]
bytecode = "[31, 9, 114, 101, 97, 100, 95, 102, 105, 108, 101, 1, 0, 108, 32, 4, 109, 97, 105, 110, 33, 0, 1, 21, 0, 26, 4, 98, 108, 97, 104, 35, 1, 0, 0, 9, 114, 101, 97, 100, 95, 102, 105, 108, 101, 21, 1, 29, 26, 2, 111, 107, 17, 40, 0, 28, 30, 21, 2, 26, 14, 114, 101, 115, 117, 108, 116, 32, 105, 115, 32, 111, 107, 58, 32, 20, 2, 14, 26, 0, 14, 38, 0, 23, 20, 1, 21, 2, 26, 17, 114, 101, 115, 117, 108, 116, 32, 119, 97, 115, 32, 110, 111, 116, 32, 111, 107, 34, 32, 9, 114, 101, 97, 100, 95, 102, 105, 108, 101, 20, 0, 26, 4, 98, 108, 97, 104, 17, 40, 0, 22, 26, 13, 102, 105, 108, 101, 32, 99, 111, 110, 116, 101, 110, 116, 115, 28, 2, 111, 107, 38, 0, 29, 26, 20, 115, 111, 109, 101, 116, 104, 105, 110, 103, 32, 119, 101, 110, 116, 32, 119, 114, 111, 110, 103, 28, 5, 101, 114, 114, 111, 114, 34]"
bytecode_length = 183
disassembled = """
0 \tfunction signature (name: read_file) (local count: 1) (function position: 108)

14 \t=== function chunk: main ===
20 \tfunction (function index: 0) (params: 1)
23 \tset_value (index: 0)
25 \tpush_string (value: 'blah')
31 \tcall read_file (is_global: 0) (arg count: 1, function index: 0)
45 \tset_value (index: 1)
47 \tget_tag_name
48 \tpush_string (value: 'ok')
52 \teq
53 \tjump if false (offset: 28, to byte 84)
56 \tget_tag_payload
57 \tset_value (index: 2)
59 \tpush_string (value: 'result is ok: ')
75 \tget_value (index: 2)
77 \tstr_concat
78 \tpush_string (value: '')
80 \tstr_concat
81 \tjump (offset: 23, to byte 107)
84 \tget_value (index: 1)
86 \tset_value (index: 2)
88 \tpush_string (value: 'result was not ok')
107 \tret

108 \t=== function chunk: read_file ===
119 \tget_value (index: 0)
121 \tpush_string (value: 'blah')
127 \teq
128 \tjump if false (offset: 22, to byte 153)
131 \tpush_string (value: 'file contents')
146 \tpush_tag (value: ':ok')
150 \tjump (offset: 29, to byte 182)
153 \tpush_string (value: 'something went wrong')
175 \tpush_tag (value: ':error')
182 \tret
"""

[output.vm]
bytes_read = 132
instructions_executed = 28
jumps_performed = 2
max_stack_height = 5
stack_allocations = 18
