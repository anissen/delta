script = '''
add = \v1 v2
    v1 + v2

"result is {40 | add 2}!"
'''

[output]
result = "result is 42!"
type = "string"

[output.compiler]
bytecode = "[33, 3, 97, 100, 100, 2, 0, 55, 34, 4, 109, 97, 105, 110, 35, 0, 2, 21, 0, 28, 10, 114, 101, 115, 117, 108, 116, 32, 105, 115, 32, 27, 0, 0, 0, 40, 27, 0, 0, 0, 2, 37, 2, 0, 0, 3, 97, 100, 100, 14, 28, 1, 33, 14, 36, 34, 3, 97, 100, 100, 20, 0, 20, 1, 0, 36]"
bytecode_length = 66
disassembled = """
0 \tfunction signature (name: add) (local count: 2) (function position: 55)

8 \t=== function chunk: main ===
14 \tfunction (function index: 0) (params: 2)
17 \tset_value (index: 0)
19 \tpush_string (value: 'result is ')
31 \tpush_integer (value: 40)
36 \tpush_integer (value: 2)
41 \tcall add (is_global: 0) (arg count: 2, function index: 0)
49 \tstr_concat
50 \tpush_string (value: '!')
53 \tstr_concat
54 \tret

55 \t=== function chunk: add ===
60 \tget_value (index: 0)
62 \tget_value (index: 1)
64 \tint_add
65 \tret
"""

[output.vm]
bytes_read = 67
instructions_executed = 16
jumps_performed = 0
max_stack_height = 6
stack_allocations = 12
